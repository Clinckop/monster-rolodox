{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","monsterData","App","state","searchFeild","fetch","then","res","json","data","setState","this","filteredmonsters","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YACnE,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KACb,SAAAC,GAAW,OAAK,cAAC,EAAD,CAA2BR,QAASQ,GAAzBA,EAAYP,UCyBtCQ,E,kDA9Bb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXJ,SAAU,GACVK,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAM,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACX,SAAWU,S,oBAGtH,WAAS,IAAD,OACN,EAAgCE,KAAKR,MAA9BJ,EAAP,EAAOA,SAAUK,EAAjB,EAAiBA,YACXQ,EAAmBb,EAASc,QAAO,SAAAd,GAAQ,OAAIA,EAASH,KAAKkB,cAAcC,SAASX,EAAYU,kBAEtG,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAOyB,KAAK,SAASC,YAAY,iBACjCC,SAAU,SAACC,GAAD,OAAM,EAAKT,SAAS,CAACN,YAAae,EAAEC,OAAOC,WACrD,cAAC,EAAD,CAAUtB,SAAWa,W,GAtBXU,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.465d7c5c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return ( \r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\"/>\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n     );\r\n}","import React from 'react'\r\nimport './card-list.css'\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return ( \r\n        <div className=\"card-list\" >\r\n            {\r\n            props.monsters.map(\r\n              monsterData => (<Card key={monsterData.id} monster={monsterData}></Card>)\r\n            )\r\n          }    \r\n        </div>\r\n     );\r\n}","import React, {Component} from 'react'\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchFeild:''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then( data => this.setState({monsters : data}));\n  }\n\n  render(){\n    const {monsters, searchFeild} = this.state;\n    const filteredmonsters = monsters.filter(monsters => monsters.name.toLowerCase().includes(searchFeild.toLowerCase()));\n\n    return(\n      <div className=\"App\">\n        <input type=\"search\" placeholder=\"search here...\" \n        onChange={(e)=> this.setState({searchFeild: e.target.value})}/>\n        <CardList monsters ={filteredmonsters} >\n          \n        </CardList>\n      </div>\n    )\n  };\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}